<style>
            .form-row {
              display: flex;
              flex-wrap: nowrap;
              gap: 10px;
              overflow-x: auto;
            }
            input {
              padding: 8px;
              font-size: 1em;
              box-sizing: border-box;
              min-width: 150px;
            }
            button {
              margin-top: 20px;
              padding: 10px;
              background-color: #007bff;
              color: white;
              border: none;
              border-radius: 4px;
              cursor: pointer;
              font-size: 1em;
            }
            button:hover {
              background-color: #0056b3;
            }
            table {
              width: 100%;
              border-collapse: collapse;
              margin-top: 30px;
            }
            th, td {
              border: 1px solid #ccc;
              padding: 8px;
              text-align: left;
            }
            th {
              background-color: #f2f2f2;
            }
            @media (max-width: 768px) {
              .form-row {
                flex-wrap: wrap;
              }
            }
          </style>
        </head>
        <body>
          <h2>Cadastro de Projetos</h2>
          <h2>.</h2>
          <div class="form-row">
            <input type="text" id="osInput" placeholder="OS" />
            <input type="text" id="cliInput" placeholder="Cliente" />
            <input type="text" id="projInput" placeholder="Projeto" />
            <input type="date" id="dataIniInput" />
            <input type="date" id="dataFimInput" />
            <input type="text" id="comercialInput" placeholder="Comercial" />
            <input type="number" id="precoInput" placeholder="Preço" step="0.01" />
            <input type="text" id="obsInput" placeholder="Observações" />            
          </div>
          <div style="margin-top:10px; display: flex; gap: 10px;">
            <button id="addBtn">Adicionar Projeto</button>
            <button id="editBtn" disabled>Editar Linha</button>
            <button id="saveBtn" disabled>Salvar Edição</button>
            <button id="deleteBtn" disabled>Deletar Linha</button>
          </div>
          <table id="projTable">
            <thead>
              <tr>
                <th>OS</th>
                <th>Cliente</th>
                <th>Projeto</th>
                <th>Data Início</th>
                <th>Data Fim</th>
                <th>Comercial</th>
                <th>Preço</th>
                <th>Observações</th>
                
              </tr>
            </thead>
            <tbody></tbody>
          </table>
          <script>
            const cliInput = document.getElementById('cliInput');
            const projInput = document.getElementById('projInput');
            const dataIniInput = document.getElementById('dataIniInput');
            const dataFimInput = document.getElementById('dataFimInput');
            const comercialInput = document.getElementById('comercialInput');
            const precoInput = document.getElementById('precoInput');
            const obsInput = document.getElementById('obsInput');
            const osInput = document.getElementById('osInput');
        
            const addBtn = document.getElementById('addBtn');
            const editBtn = document.getElementById('editBtn');
            const saveBtn = document.getElementById('saveBtn');
            const deleteBtn = document.getElementById('deleteBtn');
            const projTable = document.getElementById('projTable').getElementsByTagName('tbody')[0];
        
            let selectedRowIndex = null;
        
            function salvarLocalStorage(data) {
              localStorage.setItem('projetos', JSON.stringify(data));
            }
        
            function carregarLocalStorage() {
              const data = localStorage.getItem('projetos');
              return data ? JSON.parse(data) : [];
            }
        
            function renderizarTabela() {
              projTable.innerHTML = '';
              const data = carregarLocalStorage();
        
              data.forEach((proj, idx) => {
                const row = projTable.insertRow();
                if (idx === selectedRowIndex) {
                  row.classList.add('selected');
                }
                row.insertCell().innerText = proj.cliente;
                row.insertCell().innerText = proj.projeto;
                row.insertCell().innerText = proj.dataInicio;
                row.insertCell().innerText = proj.dataFim;
                row.insertCell().innerText = proj.comercial;
                row.insertCell().innerText = proj.preco;
                row.insertCell().innerText = proj.obs;
                row.insertCell().innerText = proj.os;
        
                row.onclick = () => {
                  if (selectedRowIndex === idx) {
                    selectedRowIndex = null;
                    editBtn.disabled = true;
                    saveBtn.disabled = true;
                    deleteBtn.disabled = true;
                    clearInputs();
                    renderizarTabela();
                  } else {
                    selectedRowIndex = idx;
                    editBtn.disabled = false;
                    saveBtn.disabled = true;
                    deleteBtn.disabled = false;
                    clearInputs();
                    renderizarTabela();
                  }
                };
              });
            }
        
            function clearInputs() {
              cliInput.value = '';
              projInput.value = '';
              dataIniInput.value = '';
              dataFimInput.value = '';
              comercialInput.value = '';
              precoInput.value = '';
              obsInput.value = '';
              osInput.value = '';
            }
        
            addBtn.onclick = () => {
              const novoProjeto = {
                cliente: cliInput.value.trim(),
                projeto: projInput.value.trim(),
                dataInicio: dataIniInput.value,
                dataFim: dataFimInput.value,
                comercial: comercialInput.value.trim(),
                preco: precoInput.value.trim(),
                obs: obsInput.value.trim(),
                os: osInput.value.trim()
              };
        
              if (!novoProjeto.cliente || !novoProjeto.projeto) {
                alert('Preencha pelo menos Cliente e Projeto.');
                return;
              }
        
              const data = carregarLocalStorage();
              data.push(novoProjeto);
              salvarLocalStorage(data);
              clearInputs();
              selectedRowIndex = null;
              editBtn.disabled = true;
              saveBtn.disabled = true;
              deleteBtn.disabled = true;
              renderizarTabela();
            };
        
            editBtn.onclick = () => {
              if (selectedRowIndex === null) {
                alert('Selecione uma linha para editar.');
                return;
              }
        
              const data = carregarLocalStorage();
              const proj = data[selectedRowIndex];
        
              cliInput.value = proj.cliente;
              projInput.value = proj.projeto;
              dataIniInput.value = proj.dataInicio;
              dataFimInput.value = proj.dataFim;
              comercialInput.value = proj.comercial;
              precoInput.value = proj.preco;
              obsInput.value = proj.obs;
              osInput.value = proj.os;
        
              saveBtn.disabled = false;
              editBtn.disabled = true;
              addBtn.disabled = true;
            };
        
            saveBtn.onclick = () => {
              if (selectedRowIndex === null) {
                alert('Nenhuma linha selecionada para salvar.');
                return;
              }
        
              const data = carregarLocalStorage();
        
              data[selectedRowIndex] = {
                cliente: cliInput.value.trim(),
                projeto: projInput.value.trim(),
                dataInicio: dataIniInput.value,
                dataFim: dataFimInput.value,
                comercial: comercialInput.value.trim(),
                preco: precoInput.value.trim(),
                obs: obsInput.value.trim(),
                os: osInput.value.trim()
              };
        
              if (!data[selectedRowIndex].cliente || !data[selectedRowIndex].projeto) {
                alert('Preencha pelo menos Cliente e Projeto.');
                return;
              }
        
              salvarLocalStorage(data);
              clearInputs();
              selectedRowIndex = null;
              saveBtn.disabled = true;
              editBtn.disabled = true;
              addBtn.disabled = false;
              deleteBtn.disabled = true;
              renderizarTabela();
            };
        
            deleteBtn.onclick = () => {
              if (selectedRowIndex === null) {
                alert('Nenhuma linha selecionada para deletar.');
                return;
              }
        
              if (!confirm('Tem certeza que deseja deletar o projeto selecionado?')) {
                return;
              }
        
              const data = carregarLocalStorage();
              data.splice(selectedRowIndex, 1);
              salvarLocalStorage(data);
        
              clearInputs();
              selectedRowIndex = null;
              editBtn.disabled = true;
              saveBtn.disabled = true;
              deleteBtn.disabled = true;
              addBtn.disabled = false;
              renderizarTabela();
            };
        
            window.onload = () => {
              renderizarTabela();
            };
          </script>